<?php
function CallFunction($Function){
    $Return = "<p><b>$Function</b><br>";
    $Result = null;
    $EvalString = "\$Result = $Function;";
    eval($EvalString);
    $Result = print_r($Result,true);
    $Return .= '<span style="border:1px solid black; height:700px; display:block; overflow: scroll">'.$Result.'</span></p>';
    return $Return;
};

$GroupIDArray = "[".implode(",",Database::User_GetGroupsForUser(5))."]";

$Functions = array();
//$Functions[] = 'Database::Experiment_InsertExperiment(5,time()+Definitions::GuestUserTimeMinutes*60,"FSMInterpreter",0,"Elevator4Floors",1862,session_id(),"AUA")';

//$Functions[] = 'Database::Language_GetModules()';
//$Functions[] = 'Database::Language_GetAvailableLocales()';
//$Functions[] = 'Database::Language_GetTranslations(["PSPU_Maze"],"de_DE")';
//$Functions[] = 'Database::Language_LoadAllTags()';
//$Functions[] = 'Database::Language_LoadAllTranslations("de_DE")';
//$Functions[] = 'Database::Language_LoadAllTranslations("de_DE","PSPU_Maze")';
//$Functions[] = 'Database::Langauge_GetGIFTTags("de_DE")';
//$Functions[] = 'Database::Devices_GetAllDevicesWithCategory("IUT")';
//$Functions[] = 'Database::Devices_GetExistingDevices("IUT")';
//$Functions[] = 'Database::Devices_GetAllDevicesAndWebcams("IUT")';
//$Functions[] = 'Database::Server_GetAllDeviceTypes()';
//$Functions[] = 'Database::Devices_GetAvailableServiceDestIDOfTyp("Pump",1,"IUT")';
//$Functions[] = 'Database::Devices_GetAvailableServiceDestIDOfTyp("Pump",0,"IUT")';
//$Functions[] = 'Database::Devices_GetPermittedDeviceCombinations("IUT")';
//$Functions[] = 'Database::Devices_GetBPUTypesForLocation("IUT")';
//$Functions[] = 'Database::Devices_GetPSPUTypesForLocation("IUT")';
//$Functions[] = 'Database::Devices_GetExistingBPUTypes()';
//$Functions[] = 'Database::Devices_GetExistingPSPUTypes()';
//$Functions[] = 'Database::Devices_GetCategoryOfDeviceType("3AxisPortal")';
//$Functions[] = 'Database::Devices_GetNumberOfRealExistingDevicesOfType("3AxisPortal","IUT")';
//$Functions[] = 'Database::Locations_GetAllAllowedAddressesForLocations()';
//$Functions[] = 'Database::Locations_GetLocationSockets()';
//$Functions[] = 'Database::Locations_GetAllLocations()';
//$Functions[] = 'Database::Protection_GetErrorDescription("3AxisPortal","de_DE")';
//$Functions[] = 'Database::Protection_GetCode("3AxisPortal","JS")';
//$Functions[] = 'Database::Protection_GetCode("3AxisPortal","VHDL","de_DE")';
//$Functions[] = 'Database::Experiment_GetAvailableServiceDestIDsForExperiment("A","ManualControl","Elevator3Floors","IUT")';
//$Functions[] = 'Database::Experiment_GetAvailableServiceDestIDsForExperiment("B","FSMInterpreter","Elevator4Floors","IUT")';
//$Functions[] = 'Database::Experiment_GetAvailableServiceDestIDsForExperiment("C","MicroController","3AxisPortal","IUT")';
//$Functions[] = 'Database::Experiment_GetAvailableServiceDestIDsForExperiment("D","MicroController","Pump","IUT")';
//$Functions[] = "Database::Experiment_GetActiveExperimentIDForUserID(5)";
//$Functions[] = 'Database::Experiment_InsertExperiment(5,time()+Definitions::GuestUserTimeMinutes*60,"FSMInterpreter",0,"Elevator4Floors",1862,session_id(),"IUT")';
//$Functions[] = 'Database::Experiment_EndExperiment(Database::Experiment_GetActiveExperimentIDForUserID(5))';
//$Functions[] = 'Database::Experiment_InsertExperiment(5,time()+Definitions::GuestUserTimeMinutes*60,"FSMInterpreter",0,"Elevator4Floors",1862,session_id(),"IUT")';
//$Functions[] = 'Database::Experiment_EndAllExperiments("IUT")';
//$Functions[] = 'Database::Experiment_InsertExperiment(5,time()+Definitions::GuestUserTimeMinutes*60,"FSMInterpreter",0,"Elevator4Floors",1862,session_id(),"IUT")';
//$Functions[] = 'Database::Experiment_EndExperimentsForSession()';
//$Functions[] = 'Database::Experiment_GetExperiment(1)';
//$Functions[] = 'Database::Experiment_InsertExperiment(5,time()+Definitions::GuestUserTimeMinutes*60,"FSMInterpreter",0,"Elevator4Floors",1862,session_id(),"IUT")';
//$Functions[] = 'Database::Experiment_GetActiveExperiments("IUT",true)';
//$Functions[] = 'Database::ECP_GetBPUAllowedFileType("MicroController")';
//$Functions[] = 'Database::ECP_GetExperimentSettings("3AxisPortal")';
//$Functions[] = 'Database::ECP_ExperimentExamples("FSMInterpreter","3AxisPortal")';
//$Functions[] = 'Database::ECP_ExperimentExamples("BEAST","3AxisPortal")';
//$Functions[] = 'Database::Functions_GetFunction("IP")';
//$Functions[] = 'Database::User_GetGroupsForUser(5)';
//$Functions[] = 'Database::Navigation_GetAllSitesForUser('.$GroupIDArray.')';
//$Functions[] = 'Database::Navigation_GetFirstSiteIDByMenuTag("MenuDeveloper",'.$GroupIDArray.')';
//$Functions[] = 'Database::Navigation_GetSiteTagFromSiteID(1)';
//$Functions[] = 'Database::Navigation_GetAllSitesForUserFromAMenu(1,'.$GroupIDArray.')';
//$Functions[] = 'Database::Navigation_GetMenuTagFromSiteID(1)';
//$Functions[] = 'Database::Navigation_GetAllMenusForUser('.$GroupIDArray.')';
//$Functions[] = 'Database::Navigation_GetIncludePath(1)';
//$Functions[] = 'Database::Navigation_SiteStartIDForLocation("IUT")';
//$Functions[] = 'Database::Navigation_GetAdminLocationsOfUser(5)';
//$Functions[] = 'Database::User_Authentificate("goldi","goldi")';
//$Functions[] = 'Database::User_GetUserByID(5)';
//$Functions[] = 'Database::User_GetUserIDByUsername("goldi")';
//$Functions[] = 'Database::User_IsBlocked(5)';
//$Functions[] = 'Database::User_SetLastLoginToNow(5)';
//$Functions[] = 'Database::User_UsernameExists("goldi")';
//$Functions[] = 'Database::User_EmailExists("goldi@tu-ilmenau.de")';
//$Functions[] = 'Database::User_GetLoginType(5)';
//$Functions[] = 'Database::User_GetVerificationToken("rafaelaandreea1@gmail.com")';
//$Functions[] = 'Database::User_CheckPasswordForID(2,"goldi")';
//$Functions[] = 'Database::User_CheckPasswordForUsername("goldi","goldi")';
//$Functions[] = 'Database::User_SetNewPassword(2,"goldi")';
//$Functions[] = 'Database::User_GenerateAndInsertForgotPasswordToken(array("UserID" => 2,"FirstName" => "goldi","LastName" => "goldi","EMail" => "goldi@tu-ilmenau.de"))';
//$Functions[] = 'Database::User_GetForgotPasswordToken("goldi")';
//$Functions[] = 'Database::User_RemoveSuperAdminForUserID(5);
//$Functions[] = 'Database::User_SetSuperAdminForUserID(5)';
//$Functions[] = 'Database::Server_GetWebcamList("IUT")';
//$Functions[] = 'Database::Server_GetExperimentDataPacket(85)';
//$Functions[] = 'Database::Server_GetExamplePacket(0,"ProgrammableLogicDevice","Elevator4Floors")';
//$Functions[] = 'Database::BookingQueue_Dequeue(4,"BPU")';
//$Functions[] = 'Database::BookingQueue_Dequeue(5,"BPU")';
//$Functions[] = 'Database::BookingQueue_Dequeue(4,"PSPU")';
//$Functions[] = 'Database::BookingQueue_Dequeue(5,"PSPU")';
//$Functions[] = 'Database::BookingQueue_Enqueue(4,"ProgrammableLogicDevice","IUT")';
//$Functions[] = 'Database::BookingQueue_Enqueue(4,"3AxisPortal","IUT")';
//$Functions[] = 'Database::BookingQueue_Enqueue(5,"ProgrammableLogicDevice","IUT")';
//$Functions[] = 'Database::BookingQueue_Enqueue(5,"3AxisPortal","IUT")';
//$Functions[] = 'Database::BookingQueue_GetDevicesForUser(5)';
//$Functions[] = 'Database::BookingQueue_GetDevicesForUser(4)';
//$Functions[] = 'Database::BookingQueue_GetQueueForDeviceType("Elevator4Floors","IUT")';
//$Functions[] = 'Database::BookingQueue_GetQueueForDeviceType("ProgrammableLogicDevice","IUT")';
//$Functions[] = 'Database::BookingQueue_LengthOfQueue("3AxisPortal","IUT")';
//$Functions[] = 'Database::Booking_GetBookingsBookings("ProgrammableLogicDevice","3AxisPortal",0,1500000000,"IUT")';
//$Functions[] = 'Database::Booking_GetBookingsBookings(null,"3AxisPortal",0,1500000000,"IUT")';
$Functions[] = 'Database::Booking_DeleteBookingByID(1)';

$SiteContent = "<pre>";
foreach ($Functions as $Function){
    $SiteContent .= CallFunction($Function);
}
$SiteContent .= "</pre>";
return;

//Database::Langauge_InsertTags();
//Database::Devices_SetDeviceList();
//Database::Devices_SetNewWebCamSettings();
//Database::Devices_SetPermittedDeviceCombinations();
//Database::Protection_InsertFilesIntoDatabase();
//Database::BookingQueue_GetQueues();
//Database::BookingQueue_GetQueueForDevice();
//Database::BookingQueue_Dequeue();
//Database::User_GetUserIDandUpdateOrInsertLDAPLogin();
//Database::User_VerificateUser();
//Database::User_InsertNewUser();
//Database::Experiment_UploadFileToDatabase();
//Database::Server_GetProgramFile();
