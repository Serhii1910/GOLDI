{"version":3,"file":"menubarController.js","sourceRoot":"","sources":["menubarController.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by Paul on 22.05.2017.\n */\n    \n    ///<reference path=\"../d_ts/jquery.d.ts\" />\n    ///<reference path=\"../d_ts/jqueryui.d.ts\" />\n    ///<reference path=\"../model/model.ts\" />\n    ///<reference path=\"../Dialog.ts\" />\n\n\nclass MenubarController\n{\n    beastController : BeastController;\n    public static createAfterWarning : boolean;\n    public static openAfterWarning : boolean;\n    public static importAfterWarning : boolean;\n    \n    /**\n     * creates new BeastController and PersistenceController\n     * defines onclick-methods of Menubar-Buttons\n     * @param beastController - corresponding BeastController instance\n     */\n    constructor(beastController)\n        {\n            this.beastController = beastController;\n            $('#createProject')\n                .on('click', {controller : this.beastController}, this.createProject);\n            $('#openProject')\n                .on('click', {controller : this.beastController}, this.openProject);\n            $('#exportProject')\n                .on('click', {controller : this.beastController}, this.exportProject);\n            $('#importProject')\n                .on('click', {controller : this.beastController}, this.importProject);\n            $('#saveProject')\n                .on('click', {controller : this.beastController}, this.saveProject);\n            $('#deleteProject')\n                .on('click', {controller : this.beastController}, this.deleteProject);\n            $('#createLibrary')\n                .on('click', {controller : this.beastController}, this.createLibrary);\n            $('#importLibrary')\n                .on('click', {controller : this.beastController}, this.importLibrary);\n            $('#exportLibrary')\n                .on('click', {controller : this.beastController}, this.exportLibrary);\n            $('#createComponent')\n                .on('click', {controller : this.beastController}, this.createComponent);\n            MenubarController.createAfterWarning = false;\n            MenubarController.openAfterWarning   = false;\n            MenubarController.importAfterWarning = false;\n            \n        }\n    \n    /**\n     * opens a warning dialog, when the the current project in the session storage is not saved\n     * calls \"saveProject\"-method or creates new project by use of PersistenceController accordingly to user's input\n     * @param event - event parameter\n     */\n    private createProject(event) : void\n        {\n            const controller : BeastController = event.data.controller;\n            const warning : WarningDialog      = new WarningDialog(() =>\n                                                                   {\n                                                                       controller.createNewProject();\n                                                                   }, () =>\n                                                                   {\n                                                                       MenubarController.createAfterWarning = true;\n                                                                       $('#saveProject')\n                                                                           .click();\n                                                                   }, () =>\n                                                                   {\n                                                                       MenubarController.createAfterWarning = true;\n                                                                       $('#exportProject')\n                                                                           .click();\n                                                                   }, null);\n            if (controller.isDirty())\n            {\n                warning.show();\n            }\n            else\n            {\n                warning.callbackContinue();\n            }\n            MenubarController.createAfterWarning = false;\n        }\n    \n    /**\n     * opens file-open-dialog\n     * checks if filetype is correct and starts upload by use of PersistenceController\n     * @param event - event parameter\n     */\n    private importProject(event) : void\n        {\n            const controller : BeastController = event.data.controller;\n            const warning : WarningDialog      = new WarningDialog(() =>\n                                                                   {\n                                                                       const fileInput : HTMLInputElement = document.createElement('input');\n                                                                       fileInput.type                     = 'file';\n                                                                       fileInput.id                       = 'files';\n                                                                       fileInput.accept                   = '.beast,' +\n                                                                                                            ' application/json';\n                                                                       $(fileInput)\n                                                                           .change(function()\n                                                                                   {\n                                                                                       const file : File = fileInput.files[0];\n                                                                                       if (file.name.endsWith('.beast'))\n                                                                                       {\n                                                                                           controller.persistenceController.loadProjectFromFile(file, (project : Project) =>\n                                                                                           {\n                                                                                               if (project == null)\n                                                                                               {\n                                                                                                   InfoDialog.showDialog('This file is not valid!');\n                                                                                               }\n                                                                                               else\n                                                                                               {\n                                                                                                   if (project.version > BeastController.BEAST_VERSION)\n                                                                                                   {\n                                                                                                       InfoDialog.showDialog('This BEAST-version is older than the version this project was created with!<br>Some of of the components may be incompatible with this version.');\n                                                                                                   }\n                                                                                                   controller.persistenceController.setCurrentProject(project);\n                                                                                                   $(fileInput)\n                                                                                                       .remove();\n                                                                                               }\n                                                                                           });\n                                                                                       }\n                                                                                       else\n                                                                                       {\n                                                                                           InfoDialog.showDialog('Choose a .beast-file!');\n                                                                                       }\n                                                                                   });\n                                                                       fileInput.click();\n                                                                   }, () =>\n                                                                   {\n                                                                       MenubarController.importAfterWarning = true;\n                                                                       $('#saveProject')\n                                                                           .click();\n                                                                   }, () =>\n                                                                   {\n                                                                       MenubarController.importAfterWarning = true;\n                                                                       $('#exportProject')\n                                                                           .click();\n                                                                   }, null);\n            if (controller.isDirty())\n            {\n                warning.show();\n            }\n            else\n            {\n                warning.callbackContinue();\n            }\n            MenubarController.importAfterWarning = false;\n        };\n    \n    /**\n     * opens dialog with a list of all projects in the local storage\n     * after selection and confirmation by the user the project is load by use of the PersistenceController\n     * @param event - event parameter\n     */\n    private openProject(event) : void\n        {\n            const controller : BeastController = event.data.controller;\n            \n            ListDialog.type               = 'openProject';\n            const warning : WarningDialog = new WarningDialog(() =>\n                                                              {\n                                                                  const dialog : ListDialog = new ListDialog(() =>\n                                                                                                             {\n                                                                                                                 if (dialog.selectedItems.length != 0)\n                                                                                                                 {\n                                                                                                                     dialog.selectedItems\n                                                                                                                           .forEach((value) =>\n                                                                                                                                    {\n                                                                                                                                        controller.loadProject(value);\n                                                                                                                                    });\n                                                                                                                     if (controller.persistenceController.getCurrentProject().version > BeastController.BEAST_VERSION)\n                                                                                                                     {\n                                                                                                                         InfoDialog.showDialog('This BEAST-version is older than the version this project was created with!<br>Some of of the components may be incompatible with this version.');\n                                                                                                                     }\n                                                                                                                 }\n                                                                                                             }, controller.listProjects());\n                                                                  dialog.show();\n                                                              }, () =>\n                                                              {\n                                                                  MenubarController.openAfterWarning = true;\n                                                                  $('#saveProject')\n                                                                      .click();\n                                                              }, () =>\n                                                              {\n                                                                  MenubarController.openAfterWarning = true;\n                                                                  $('#exportProject')\n                                                                      .click();\n                                                              }, null);\n            if (controller.isDirty())\n            {\n                warning.show();\n            }\n            else\n            {\n                warning.callbackContinue();\n            }\n            MenubarController.openAfterWarning = false;\n        }\n    \n    \n    /**\n     * opens dialog for name input and saves project in browser's local storage by use of the PersistenceController\n     * @param event - event parameter\n     */\n    private saveProject(event) : void\n        {\n            const controller : BeastController = event.data.controller;\n            InputDialog.type                   = 'saveProject';\n            const saveDialog : InputDialog     = new InputDialog((input : string) =>\n                                                                 {\n                                                                     const p : Project = controller.persistenceController.getCurrentProject();\n                                                                     p.setName(input);\n                                                                     controller.persistenceController.saveCurrentProjectInLocalStorage();\n                                                                     if (MenubarController.createAfterWarning)\n                                                                     {\n                                                                         $('#createProject')\n                                                                             .click();\n                                                                     }\n                                                                     if (MenubarController.importAfterWarning)\n                                                                     {\n                                                                         $('#importProject')\n                                                                             .click();\n                                                                     }\n                                                                     if (MenubarController.openAfterWarning)\n                                                                     {\n                                                                         $('#openProject')\n                                                                             .click();\n                                                                     }\n                                                                 }, controller.persistenceController.getCurrentProject()\n                                                                              .getName(), controller.listProjects());\n            saveDialog.show();\n        }\n    \n    /**\n     * opens dialog with a list of all projects in the local storage\n     * after selection and confirmation by the user the selected projects are deleted from the local storage by use\n     * of the PersistenceController\n     * @param event - event parameter\n     */\n    private deleteProject(event) : void\n        {\n            const controller : BeastController = event.data.controller;\n            \n            ListDialog.type           = 'deleteProject';\n            const dialog : ListDialog = new ListDialog(() =>\n                                                       {\n                                                           if (dialog.selectedItems.length != 0)\n                                                           {\n                                                               dialog.selectedItems\n                                                                     .forEach((value) =>\n                                                                              {\n                                                                                  controller.persistenceController.deleteLocalProject(value);\n                                                                              });\n                                                           }\n                                                       }, controller.listProjects());\n            dialog.show();\n        }\n    \n    /**\n     * opens dialog for name input and downloads project by use of the PersistenceController\n     * @param event - event param\n     */\n    private exportProject(event) : void\n        {\n            const controller : BeastController = event.data.controller;\n            InputDialog.type                   = 'exportProject';\n            const exportDialog : InputDialog   = new InputDialog((input : string) =>\n                                                                 {\n                                                                     const p : Project = controller.persistenceController.getCurrentProject();\n                                                                     p.setName(input);\n                                                                     controller.persistenceController.downloadCurrentProject();\n                                                                     if (MenubarController.createAfterWarning)\n                                                                     {\n                                                                         $('#createProject')\n                                                                             .click();\n                                                                     }\n                                                                     if (MenubarController.importAfterWarning)\n                                                                     {\n                                                                         $('#importProject')\n                                                                             .click();\n                                                                     }\n                                                                     if (MenubarController.openAfterWarning)\n                                                                     {\n                                                                         $('#openProject')\n                                                                             .click();\n                                                                     }\n                                                                 }, controller.persistenceController.getCurrentProject()\n                                                                              .getName(), null);\n            exportDialog.show();\n        }\n    \n    /**\n     * opens name input dialog, creates new Library-object and adds it to the current project\n     * @param event - event parameter\n     */\n    private createLibrary(event) : void\n        {\n            const controller           = event.data.controller;\n            InputDialog.type           = 'createLibrary';\n            const dialog : InputDialog = new InputDialog((input : string) =>\n                                                         {\n                                                             if (null == controller.createLibrary(input))\n                                                             {\n                                                                 InfoDialog.showDialog('A library' +\n                                                                                       ' with this name already exists!');\n                                                             }\n                                                         }, 'New Library', null);\n            dialog.show();\n        }\n    \n    /**\n     * opens file-open-dialog\n     * checks if filetype is correct and starts upload by use of PersistenceController\n     * @param event - event parameter\n     */\n    private importLibrary(event) : void\n        {\n            const controller = event.data.controller;\n            \n            const fileInput : HTMLInputElement = document.createElement('input');\n            fileInput.type                     = 'file';\n            fileInput.id                       = 'files';\n            fileInput.multiple                 = true;\n            fileInput.accept                   = '.bdcl,' +\n                                                 ' application/json';\n            $(fileInput)\n                .change(function()\n                        {\n                            const files : FileList = fileInput.files;\n                    \n                            let invalidFiles : string[]        = [];\n                            let nameCollisionFiles : string[]  = [];\n                            let unequalVersionFiles : string[] = [];\n                    \n                            for (let i = 0; i < files.length; i++)\n                            {\n                                if (files[i].name.endsWith('.bdcl'))\n                                {\n                                    controller.persistenceController.loadLibraryFromFile(files[i], (lib : Library) =>\n                                    {\n                                        if (lib == null)\n                                        {\n                                            invalidFiles[invalidFiles.length] = files[i].name;\n                                        }\n                                        else\n                                        {\n                                            if (controller.addLibrary(lib) == null)\n                                            {\n                                                nameCollisionFiles[nameCollisionFiles.length] = files[i].name;\n                                            }\n                                            else if (lib.version > BeastController.BEAST_VERSION)\n                                            {\n                                                unequalVersionFiles[unequalVersionFiles.length] = files[i].name;\n                                            }\n                                        }\n                                \n                                        if (i == files.length - 1)\n                                        {\n                                            let message : string = '';\n                                            if (invalidFiles.length > 0)\n                                            {\n                                                message += invalidFiles.length == 1 ? 'Can\\'t import' +\n                                                                                      ' library from file:<br>\"' : 'Can\\'t' +\n                                                                                                                   ' import' +\n                                                                                                                   ' libraries from' +\n                                                                                                                   ' files:<br>\"';\n                                                invalidFiles.forEach((value) =>\n                                                                     {\n                                                                         message += value + '\"<br>';\n                                                                     });\n                                                message += '<br>Invalid file content!<br>';\n                                            }\n                                            if (nameCollisionFiles.length > 0)\n                                            {\n                                                message += message == '' ? '' : '<br>';\n                                                message += nameCollisionFiles.length == 1 ? 'Can\\'t import library' +\n                                                                                            ' from' +\n                                                                                            ' file:<br>\"' : 'Can\\'t' +\n                                                                                                            ' import' +\n                                                                                                            ' libraries from' +\n                                                                                                            ' files:<br>\"';\n                                                nameCollisionFiles.forEach((value) =>\n                                                                           {\n                                                                               message += value + '\"<br>';\n                                                                           });\n                                                message += nameCollisionFiles.length == 1 ? '<br>A library with this name already' +\n                                                                                            ' exists!<br>' : '<br>Libraries with this name already exist!<br>';\n                                            }\n                                            if (unequalVersionFiles.length > 0)\n                                            {\n                                                message += message == '' ? '' : '<br>';\n                                                message += unequalVersionFiles.length == 1 ? 'This BEAST-version is older than' +\n                                                                                             ' the version the' +\n                                                                                             ' library from' +\n                                                                                             ' file:<br>\"' : 'This' +\n                                                                                                             ' BEAST-version is older than' +\n                                                                                                             ' the version the libraries from files:<br>\"';\n                                                unequalVersionFiles.forEach((value) =>\n                                                                            {\n                                                                                message += value + '\"<br>';\n                                                                            });\n                                                message += unequalVersionFiles.length == 1 ? 'was created with!<br>' : 'were' +\n                                                                                                                       ' created' +\n                                                                                                                       ' with!<br>';\n                                                message += '<br>Some of the components may be incompatible with this version.';\n                                            }\n                                            if (message.length > 0)\n                                            {\n                                                InfoDialog.showDialog(message);\n                                            }\n                                        }\n                                    });\n                                }\n                            }\n                    \n                            $(fileInput)\n                                .remove();\n                        });\n            \n            fileInput.click();\n        }\n    \n    /**\n     * opens dialog for choosing libraries and starts download of chosen libraries by use of the PersistenceController\n     * @param event - event parameter\n     */\n    private exportLibrary(event) : void\n        {\n            const controller          = event.data.controller;\n            ListDialog.type           = 'exportLibrary';\n            const dialog : ListDialog = new ListDialog(function()\n                                                       {\n                                                           dialog.selectedItems\n                                                                 .forEach((value) =>\n                                                                          {\n                                                                              controller.downloadLibrary(value.name + '.bdcl', value);\n                                                                          });\n                                                       }, controller.getExportableLibraries());\n            dialog.show();\n        }\n    \n    private createComponent(event) : void\n        {\n            const controller           = <BeastController>event.data.controller;\n            InputDialog.type           = 'createComponent';\n            const dialog : InputDialog = new InputDialog((input : string) =>\n                                                         {\n                                                             controller.createAndOpenComponent(input);\n                                                         }, 'New Component', null);\n            dialog.show();\n        }\n}\n\nclass WarningDialog extends Dialog\n{\n    public callbackContinue : () => void;\n    protected callbackSave : () => void;\n    protected callBackExport : () => void;\n    private name : string;\n    \n    constructor(callbackFunctionContinue : () => void, callbackFunctionSave : () => void, callbackFunctionExport : () => void, projectName : string)\n        {\n            super();\n            this.callbackContinue = callbackFunctionContinue;\n            this.callbackSave     = callbackFunctionSave;\n            this.callBackExport   = callbackFunctionExport;\n            this.name             = projectName;\n        }\n    \n    protected getTitle() : string\n        {\n            return 'Warning';\n        }\n    \n    protected getContent() : JQuery\n        {\n            let content : JQuery;\n            if (this.name == null)\n            {\n                content = $('<div><p>The open project is not saved!</p></div>');\n                this.addButton('Save', 'glyphicon glyphicon-floppy-disk', () =>\n                {\n                    this.callbackSave();\n                    this.close();\n                });\n                this.addButton('Export', 'glyphicon glyphicon-export', () =>\n                {\n                    this.callBackExport();\n                    this.close();\n                });\n                this.addButton('Don\\'t Save', 'glyphicon glyphicon-remove', () =>\n                {\n                    this.callbackContinue();\n                    this.close();\n                });\n            }\n            else\n            {\n                content = $('<p></p>');\n                content.prop('innerText', 'Do you want to overwrite the project \"' + this.name + '\"?');\n                this.addButton('Overwrite', 'glyphicon glyphicon-edit', () =>\n                {\n                    this.callbackContinue();\n                    this.close();\n                });\n                this.addButton('Cancel', 'glyphicon glyphicon-remove', () =>\n                {\n                    this.close();\n                });\n            }\n            return content;\n        }\n}\n\nclass InputDialog extends Dialog\n{\n    private callback : (inputValue : string) => void;\n    private defaultText : string;\n    private projectList : string[];\n    public static type : string;\n    private buttonFunction : () => void;\n    \n    constructor(callbackFunction : (inputValue) => void, defaultText : string, projectList : string[])\n        {\n            super();\n            this.callback    = callbackFunction;\n            this.defaultText = defaultText;\n            this.projectList = projectList;\n        }\n    \n    protected getTitle() : string\n        {\n            let s : string;\n            switch (InputDialog.type)\n            {\n                case 'saveProject':\n                    s = 'Save project...';\n                    break;\n                case 'exportProject':\n                    s = 'Export project as...';\n                    break;\n                case 'createLibrary':\n                    s = 'Create new library...';\n                    break;\n                case 'createComponent':\n                    s = 'Create new Component...';\n                    break;\n            }\n            return s;\n        }\n    \n    protected getContent() : JQuery\n        {\n            const content : JQuery = $('<div></div>');\n            const inputField       = $('<input/>')\n                .addClass('beast-horizontal-fill');\n            if (InputDialog.type == 'saveProject')\n            {\n                content.append($('<p>Current projects in the local storage:</p>'));\n                \n                if (this.projectList.length == 0)\n                {\n                    content.append($('<p><br/><i>There are no saved projects.</i></p><br>'));\n                }\n                else\n                {\n                    const selectList : JQuery = $('<select></select>');\n                    selectList.attr('size', this.projectList.length > 1 ? this.projectList.length : 2);\n                    selectList.addClass('beast-horizontal-fill');\n                    this.projectList.forEach((value) =>\n                                             {\n                                                 const option : JQuery = $('<option></option>');\n                                                 option.prop('innerText', value);\n                                                 selectList.append(option);\n                                             });\n                    selectList.on('change', () =>\n                    {\n                        console.log(selectList.prop('selectedIndex'));\n                        inputField.val(this.projectList[selectList.prop('selectedIndex')]);\n                    });\n                    content.append(selectList);\n                    content.append($('<br><br>'));\n                }\n                content.append('<p><b>Save as...</b></p>');\n            }\n            \n            this.buttonFunction = () =>\n            {\n                const val : string = inputField.prop('value');\n                if (val != '')\n                {\n                    if (InputDialog.type == 'saveProject')\n                    {\n                        if (this.projectList.indexOf(val) == -1)\n                        {\n                            this.callback(val);\n                        }\n                        else\n                        {\n                            const warning = new WarningDialog(() =>\n                                                              {\n                                                                  this.callback(val);\n                                                              }, null, null, val);\n                            warning.show();\n                        }\n                    }\n                    else\n                    {\n                        this.callback(val);\n                    }\n                    this.close();\n                }\n            };\n            \n            let buttonName : string;\n            inputField.val(this.defaultText);\n            inputField.prop('autofocus', 'true');\n            inputField.on('input', () =>\n            {\n                if (inputField.val().length == 0)\n                {\n                    this.setButtonDisabled(buttonName, true);\n                }\n                else\n                {\n                    this.setButtonDisabled(buttonName, false);\n                }\n            });\n            inputField\n                .attr('type', 'text');\n            content.append(inputField);\n            \n            let icon : string;\n            switch (InputDialog.type)\n            {\n                case 'saveProject':\n                    buttonName = 'Save';\n                    icon       = 'glyphicon glyphicon-floppy-disk';\n                    break;\n                case 'exportProject':\n                    buttonName = 'Export';\n                    icon       = 'glyphicon glyphicon-export';\n                    break;\n                case 'createLibrary':\n                    buttonName = 'Create';\n                    icon       = 'glyphicon glyphicon-file';\n                    break;\n                case 'createComponent':\n                    buttonName = 'Create';\n                    icon       = 'glyphicon glyphicon-file';\n                    break;\n            }\n            this.addButton(buttonName, icon, this.buttonFunction);\n            \n            this.addButton('Cancel', 'glyphicon glyphicon-remove', () =>\n            {\n                this.close();\n            });\n            \n            this.registerKeyListener((key : number) =>\n                                     {\n                                         if (key == 13)\n                                         {\n                                             this.buttonFunction();\n                                         }\n                                     });\n            \n            return content;\n        }\n}\n\nclass ListDialog extends Dialog\n{\n    private callback : () => void;\n    private list : any[];\n    public selectedItems : any[];\n    public static type : string;\n    private buttonFunction : () => void;\n    \n    constructor(callBackFunction : () => void, list : string[] | Library[])\n        {\n            super();\n            this.callback      = callBackFunction;\n            this.list          = list;\n            this.selectedItems = [];\n        }\n    \n    protected getTitle() : string\n        {\n            let s : string;\n            switch (ListDialog.type)\n            {\n                case 'openProject':\n                    s = 'Open project...';\n                    break;\n                case 'deleteProject':\n                    s = 'Delete project...';\n                    break;\n                case 'exportLibrary':\n                    s = 'Export library...';\n                    break;\n            }\n            return s;\n        }\n    \n    protected getContent() : JQuery\n        {\n            const content : JQuery = $('<form></form>');\n            \n            if (this.list.length == 0)\n            {\n                content.append(ListDialog.type == 'exportLibrary' ? '<p><br/><i>There are no libraries you can' +\n                                                                    ' export.</i></p>' : '<p><br/><i>There are no saved' +\n                                                                                         ' projects.</i></p>');\n            }\n            else\n            {\n                const itemList : JQuery = $('<fieldset></fieldset>');\n                this.list.forEach((value) =>\n                                  {\n                                      const val : string   = ListDialog.type == 'exportLibrary' ? value.name : value;\n                                      const input : JQuery = $('<input>');\n                                      input.prop('type', ListDialog.type == 'openProject' ? 'radio' : 'checkbox');\n                                      input.prop('name', 'list');\n                                      input.attr('id', val);\n                                      const label : JQuery = $('<label></label>');\n                                      label.prop('innerText', val);\n                                      label.attr('for', val);\n                                      itemList.append(input);\n                                      itemList.append(label);\n                                      itemList.append('<br>');\n                                  }\n                );\n                itemList.find('input')[0].click();\n                if (ListDialog.type == 'deleteProject')\n                {\n                    itemList.on('click', () =>\n                    {\n                        let itemSelected : boolean = false;\n                        itemList.children('input')\n                                .each((index, value) =>\n                                      {\n                                          if ((<HTMLInputElement>value).checked)\n                                          {\n                                              itemSelected = true;\n                                          }\n                                      });\n                        this.setButtonDisabled('Delete', !itemSelected);\n                    });\n                }\n                content.append(itemList);\n                \n                let buttonName : string;\n                let icon : string;\n                switch (ListDialog.type)\n                {\n                    case 'openProject':\n                        buttonName = 'Open';\n                        icon       = 'glyphicon glyphicon-folder-open';\n                        break;\n                    case 'deleteProject':\n                        buttonName = 'Delete';\n                        icon       = 'glyphicon glyphicon-trash';\n                        break;\n                    case 'exportLibrary':\n                        buttonName = 'Export';\n                        icon       = 'glyphicon glyphicon-export';\n                        break;\n                }\n                \n                this.buttonFunction = () =>\n                {\n                    let n = 0;\n                    this.list\n                        .forEach((value, index) =>\n                                 {\n                                     if ((<HTMLInputElement>itemList.find('input')[index - n]).checked)\n                                     {\n                                         this.selectedItems.push(value);\n                                         if (ListDialog.type == 'deleteProject')\n                                         {\n                                             itemList.find('input')[index - n].remove();\n                                             itemList.find('label')[index - n].remove();\n                                             itemList.find('br')[index - n].remove();\n                                             n++;\n                                             if (itemList.find('input').length == 0)\n                                             {\n                                                 const p : JQuery = $('<p><br/><i>There are no' +\n                                                                      ' saved projects.</i></p>');\n                                                 content.append(p);\n                                                 this.setButtonDisabled(buttonName, true);\n                                             }\n                                         }\n                                     }\n                                 });\n                    this.callback();\n                    if (ListDialog.type != 'deleteProject')\n                    {\n                        this.close();\n                    }\n                };\n                \n                \n                this.addButton(buttonName, icon, this.buttonFunction);\n                \n                this.registerKeyListener((key : number) =>\n                                         {\n                                             if (key == 13)\n                                             {\n                                                 this.buttonFunction();\n                                             }\n                                         });\n            }\n            \n            \n            this.addButton('Cancel', 'glyphicon glyphicon-remove', () =>\n            {\n                this.close();\n            });\n            \n            \n            return content;\n        }\n}"]}